from aiogram import Bot, Dispatcher
from aiogram.filters import CommandStart, Text
from aiogram.types import (KeyboardButton, Message, ReplyKeyboardMarkup,
                           ReplyKeyboardRemove)
from aiogram.utils.keyboard import ReplyKeyboardBuilder

# –í–º–µ—Å—Ç–æ BOT TOKEN HERE –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞,
# –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —É @BotFather
API_TOKEN: str = ''

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot: Bot = Bot(token=API_TOKEN)
dp: Dispatcher = Dispatcher()


# """1"""
# –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏
keyboard: list[list[KeyboardButton]] = [
    [KeyboardButton(text=str(i)) for i in range(1, 4)],
    [KeyboardButton(text=str(i)) for i in range(4, 7)]]

keyboard.append([KeyboardButton(text='7')])

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
my_keyboard: ReplyKeyboardMarkup = ReplyKeyboardMarkup(
    keyboard=keyboard,
    resize_keyboard=True)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
# –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —á–∞—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
@dp.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(text='–í–æ—Ç —Ç–∞–∫–∞—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞', reply_markup=my_keyboard)


# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫
# button_1: KeyboardButton = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 1')
# button_2: KeyboardButton = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 2')
# button_3: KeyboardButton = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 3')
# button_4: KeyboardButton = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 4')
# button_5: KeyboardButton = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 5')
# button_6: KeyboardButton = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 6')
# button_7: KeyboardButton = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 7')
# button_8: KeyboardButton = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 8')
# button_9: KeyboardButton = KeyboardButton(text='–ö–Ω–æ–ø–∫–∞ 9')
#
# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
# keyboard: ReplyKeyboardMarkup = ReplyKeyboardMarkup(
#                         keyboard=[[button_1, button_2, button_3],
#                                   [button_4, button_5, button_6],
#                                   [button_7, button_8, button_9]],
#                         resize_keyboard=True)



# keyboard: list[list[KeyboardButton]] = [[KeyboardButton(
#     text=f'–ö–Ω–æ–ø–∫–∞ {j * 3 + i}') for i in range(1, 4)] for j in range(3)]
#
# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
# keyboard: ReplyKeyboardMarkup = ReplyKeyboardMarkup(
#     keyboard=keyboard,
#     resize_keyboard=True)


# # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∏–ª–¥–µ—Ä
# kb_builder: ReplyKeyboardBuilder = ReplyKeyboardBuilder()
#
# # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏
# buttons: list[KeyboardButton] = [KeyboardButton(
#                 text=f'–ö–Ω–æ–ø–∫–∞ {i + 1}') for i in range(10)]
#
# # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –±–∏–ª–¥–µ—Ä, —É–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ
# # –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 4 –∫–Ω–æ–ø–∫–∏
# kb_builder.row(*buttons, width=4)
#
#
# # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
# # –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —á–∞—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
# @dp.message(CommandStart())
# async def process_start_command(message: Message):
#     await message.answer(text='–í–æ—Ç —Ç–∞–∫–∞—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞',
#                          reply_markup=kb_builder.as_markup(
#                                             resize_keyboard=True))



# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫
# button_1: KeyboardButton = KeyboardButton(text='–°–æ–±–∞–∫ ü¶Æ')
# button_2: KeyboardButton = KeyboardButton(text='–û–≥—É—Ä—Ü–æ–≤ ü•í')
#
# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
# keyboard: ReplyKeyboardMarkup = ReplyKeyboardMarkup(
#                                     keyboard=[[button_1, button_2]],
#                                     resize_keyboard=True,
#                                     one_time_keyboard=True)
#
# # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
# # –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —á–∞—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
# @dp.message(CommandStart())
# async def process_start_command(message: Message):
#     await message.answer(text='–ß–µ–≥–æ –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ?',
#                          reply_markup=keyboard)
#
#
#
# # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç "–°–æ–±–∞–∫ ü¶Æ" –∏ —É–¥–∞–ª—è—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
# @dp.message(Text(text='–°–æ–±–∞–∫ ü¶Æ'))
# async def process_dog_answer(message: Message):
#     await message.answer(text='–î–∞, –Ω–µ—Å–æ–º–Ω–µ–Ω–Ω–æ, –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è —Å–æ–±–∞–∫. '
#                               '–ù–æ –≤—ã –≤–∏–¥–µ–ª–∏ –∫–∞–∫ –æ–Ω–∏ –±–æ—è—Ç—Å—è –æ–≥—É—Ä—Ü–æ–≤?')
#                          # reply_markup=ReplyKeyboardRemove())
#
#
#
# # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç "–û–≥—É—Ä—Ü–æ–≤ ü•í" –∏ —É–¥–∞–ª—è—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
# @dp.message(Text(text='–û–≥—É—Ä—Ü–æ–≤ ü•í'))
# async def process_cucumber_answer(message: Message):
#     await message.answer(text='–î–∞, –∏–Ω–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –æ–≥—É—Ä—Ü–æ–≤ '
#                               '–∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ')
#                          # reply_markup=ReplyKeyboardRemove())


if __name__ == '__main__':
    dp.run_polling(bot)